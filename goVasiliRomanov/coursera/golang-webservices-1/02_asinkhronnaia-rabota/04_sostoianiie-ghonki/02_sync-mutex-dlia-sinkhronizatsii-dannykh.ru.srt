1
00:00:00,000 --> 00:00:05,846
[БЕЗ_ЗВУКА] Итак,

2
00:00:05,846 --> 00:00:10,630
каким образом нам обезопасить
наши данные от состояния гонки?

3
00:00:10,630 --> 00:00:15,000
Одним из инструментов, которые предлагает
стандартная библиотека go для этих целей,

4
00:00:15,000 --> 00:00:16,410
конечно же является Mutex.

5
00:00:16,410 --> 00:00:20,820
Давайте посмотрим, как с ним работать.

6
00:00:20,820 --> 00:00:28,199
Итак, на строчке 10 мы создаем Mutex,
создаем его, как ссылку на объект.

7
00:00:28,199 --> 00:00:33,122
Дело в том, что Mutex в связи со своей
внутренней реализацией не должен быть

8
00:00:33,122 --> 00:00:36,730
копирован после первого использования,
как значение.

9
00:00:36,730 --> 00:00:39,581
Поэтому всегда создавайте его,
как ссылку на объект,

10
00:00:39,581 --> 00:00:41,410
и передавайте тоже ссылку на него.

11
00:00:41,410 --> 00:00:44,670
После его создания мы передаем
его в нашу go-рутину,

12
00:00:44,670 --> 00:00:50,530
и внутри go-рутины Mutex
выполняет основную свою работу.

13
00:00:50,530 --> 00:00:55,874
То есть перед началом работы с данными

14
00:00:55,874 --> 00:01:03,151
мы берем lock на эти данные,
точнее на этот Mutex.

15
00:01:03,151 --> 00:01:08,666
То есть мы говорим,
что я залочился, я взял права

16
00:01:08,666 --> 00:01:13,230
на работу с этими данными, пожалуйста,
больше никто другой не работайте с ними.

17
00:01:13,230 --> 00:01:17,970
Все другие, кто попробует взять lock,
они будут ожидать.

18
00:01:17,970 --> 00:01:25,660
После этого дела я на строчке 15 уже
работаю непосредственно с данными.

19
00:01:25,660 --> 00:01:30,346
И на строчке 16 я снимаю

20
00:01:30,346 --> 00:01:34,965
lock на данные, ну то есть освобождаю его,

21
00:01:34,965 --> 00:01:40,180
говоря, что теперь все, кто хочет,
берите следующий, работайте дальше.

22
00:01:40,180 --> 00:01:41,723
Вроде бы все работает.

23
00:01:41,723 --> 00:01:44,510
Давайте теперь запустим нашу программу.

24
00:01:44,510 --> 00:01:52,458
[ЗВУК] Итак,

25
00:01:52,458 --> 00:01:58,240
наша программа успешно отработала.

26
00:01:58,240 --> 00:02:04,170
Вроде бы все хорошо, но давайте посмотрим,
что на это скажет race detector.

27
00:02:04,170 --> 00:02:07,470
go run -race

28
00:02:07,470 --> 00:02:16,470
[ЗВУК] Опа.

29
00:02:16,470 --> 00:02:20,670
Программа отработала,

30
00:02:20,670 --> 00:02:24,199
но race detector по-прежнему ругается.

31
00:02:24,199 --> 00:02:25,870
На что он ругается?

32
00:02:25,870 --> 00:02:30,610
Он ругается на строчку 15.

33
00:02:30,610 --> 00:02:34,910
Строчка 15 — это как раз
таки изменение данных.

34
00:02:34,910 --> 00:02:38,063
Ну, тут вроде бы мы защитились.

35
00:02:38,063 --> 00:02:39,080
А что еще?

36
00:02:39,080 --> 00:02:40,005
Ага.

37
00:02:40,005 --> 00:02:42,600
И строчка 21.

38
00:02:42,600 --> 00:02:45,015
Что находится на строчке 21?

39
00:02:45,015 --> 00:02:48,420
На строчке 21 мы обращаемся к этим данным,

40
00:02:48,420 --> 00:02:53,220
то есть race detector смотрит,
что мы не просто в каких-то местах,

41
00:02:53,220 --> 00:02:58,551
где мы изменяем эти данные, но и в
тех местах, где мы обращаемся к мапе.

42
00:02:58,551 --> 00:03:04,319
Мапа полностью небезопасна, то есть вдруг
если мы в этом месте мы защитились,

43
00:03:04,319 --> 00:03:07,080
на строчке 15, там, где мы изменяем,

44
00:03:07,080 --> 00:03:12,270
но вдруг в каком-то месте мы пытаемся
обратиться, то есть прочитать эти данные.

45
00:03:12,270 --> 00:03:17,660
В то же время мы с другой стороны,
вроде бы защитившись, мы их изменяем.

46
00:03:17,660 --> 00:03:19,214
Все равно будет ошибка.

47
00:03:19,214 --> 00:03:24,773
Поэтому, чтобы race detector был спокоен,
нам придется и обращение

48
00:03:24,773 --> 00:03:29,544
к данным тоже покрыть lock-ом на Mutex.

49
00:03:29,544 --> 00:03:32,090
Давайте запустим теперь.

50
00:03:32,090 --> 00:03:39,260
Итак, запускаем с ключом race,

51
00:03:39,260 --> 00:03:45,057
и race detector не заругался,
то есть мы успешно защитили

52
00:03:45,057 --> 00:03:50,430
наши данные от race condition.

53
00:03:50,430 --> 00:03:56,630
Но при работе с Mutex-ами
есть некоторые нюансы.