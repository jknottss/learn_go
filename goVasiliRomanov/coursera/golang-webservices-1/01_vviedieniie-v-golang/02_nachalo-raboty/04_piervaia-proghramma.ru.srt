1
00:00:00,000 --> 00:00:05,900
[БЕЗ СЛОВ] Итак,

2
00:00:05,900 --> 00:00:10,790
давайте уже, наконец,
напишем нашу самую первую программу на go.

3
00:00:10,790 --> 00:00:16,386
К этому времени вы должны были уже
скачать компилятор go с основного

4
00:00:16,386 --> 00:00:21,620
сайта и воспользоваться приложенной к
курсу документацией по его установке.

5
00:00:21,620 --> 00:00:26,477
Писать нашу первую программу мы
будет в замечательном месте,

6
00:00:26,477 --> 00:00:29,965
которое называется play.golang.com.

7
00:00:29,965 --> 00:00:36,494
Это сайт, где вы можете вводить нужный вам
код на go и он будет на удаленном сервере,

8
00:00:36,494 --> 00:00:41,116
который предоставляет компания Google,
компилироваться, собираться,

9
00:00:41,116 --> 00:00:43,950
и результат работы программы
будет выводиться вам на экран.

10
00:00:43,950 --> 00:00:48,349
Это место очень удобно для того,
чтобы проверить какие-то свои методы

11
00:00:48,349 --> 00:00:52,440
и эксперименты, либо поделиться
небольшим куском кода с коллегами.

12
00:00:52,440 --> 00:00:54,555
Давайте начнем.

13
00:00:54,555 --> 00:01:00,087
Любой пакет в go,
любая программа начинается с имени пакета.

14
00:01:00,087 --> 00:01:02,310
Добавляется он через package.

15
00:01:02,310 --> 00:01:04,261
package main.

16
00:01:04,261 --> 00:01:07,563
main — это особый пакет.

17
00:01:07,563 --> 00:01:12,610
Он является, скажем так, основным,
в нем должна находиться функция main,

18
00:01:12,610 --> 00:01:15,190
которая будет запускаться
при старте программы.

19
00:01:15,190 --> 00:01:22,473
Еще нам понадобится функция
вывода текста на экран.

20
00:01:22,473 --> 00:01:28,708
Она находится в другом пакете,
который называется fmt.

21
00:01:28,708 --> 00:01:30,625
Импортируем ее.

22
00:01:30,625 --> 00:01:32,233
import "fmt".

23
00:01:32,233 --> 00:01:38,588
Таким образом мы говорим программе, что
мы будем использовать еще какой-то пакет.

24
00:01:38,588 --> 00:01:41,480
Теперь напишем
непосредственно нашу функцию.

25
00:01:41,480 --> 00:01:45,330
func main.

26
00:01:45,330 --> 00:01:50,051
func — это ключевое слово,
которое определяет,

27
00:01:50,051 --> 00:01:53,340
что тут будет определение функции,
main это название функции.

28
00:01:53,340 --> 00:01:58,440
Напомню, что main это особая функция,
которая выполняется при старте программы.

29
00:01:58,440 --> 00:02:00,052
Напишем...

30
00:02:00,052 --> 00:02:03,400
выведем что-нибудь на экран.

31
00:02:03,400 --> 00:02:11,182
[БЕЗ СЛОВ] По

32
00:02:11,182 --> 00:02:17,960
традиции это "Hello world".

33
00:02:17,960 --> 00:02:18,775
Запустим.

34
00:02:18,775 --> 00:02:20,078
"Hello world".

35
00:02:20,078 --> 00:02:20,811
Отлично.

36
00:02:20,811 --> 00:02:22,359
Он скомпилировался.

37
00:02:22,359 --> 00:02:23,910
Вывелся нам на экран.

38
00:02:23,910 --> 00:02:29,710
Но вот тут я не поставил
никаких ни пробелов, ничего.

39
00:02:29,710 --> 00:02:34,522
Как я уже говорил, в go встроены
инструменты для форматирования кода и

40
00:02:34,522 --> 00:02:37,100
вообще стиль задан довольно жестко.

41
00:02:37,100 --> 00:02:40,905
Playground позволяет вам отформатировать
код, который вы в нем ввели,

42
00:02:40,905 --> 00:02:42,510
для этого есть кнопка Format.

43
00:02:42,510 --> 00:02:43,910
Вот и отлично.

44
00:02:43,910 --> 00:02:48,230
Теперь мой код имеет
хороший красивый отступ.

45
00:02:48,230 --> 00:02:53,019
Playground — очень удобное
средство для того,

46
00:02:53,019 --> 00:02:57,735
чтобы демонстрировать мелкие куски,
однако для курса он нам не подходит.

47
00:02:57,735 --> 00:03:01,860
Мы будем использовать в процессе курса,
я буду использовать,

48
00:03:01,860 --> 00:03:09,554
visual studio code с белой темой
оформления для демонстрации всего кода.

49
00:03:09,554 --> 00:03:14,170
Вот так будет выглядеть
весь код на нашем курсе.

50
00:03:14,170 --> 00:03:22,300
Теперь давайте это запустим уже
непосредственно на моем ноутбуке.

51
00:03:22,300 --> 00:03:25,623
Мы можем несколькими
образами запустить код.

52
00:03:25,623 --> 00:03:30,705
Мы можем использовать команду go run,
она нам скомпилирует бинарник

53
00:03:30,705 --> 00:03:36,920
во временном месте и запустит уже его,
либо использовать команду go build.

54
00:03:36,920 --> 00:03:41,297
В процессе курса я буду в основном
пользоваться командой go run.

55
00:03:41,297 --> 00:03:43,643
Итак, go run hello_world.

56
00:03:43,643 --> 00:03:44,583
Отлично.

57
00:03:44,583 --> 00:03:47,510
hello_world вывелся на экран.

58
00:03:47,510 --> 00:03:52,980
Теперь я покажу,
каким образом форматировать код.

59
00:03:52,980 --> 00:03:55,877
Ну, давайте что-нибудь тут удалим.

60
00:03:55,877 --> 00:03:57,809
Вот форматирования нет.

61
00:03:57,809 --> 00:04:03,490
Для форматирования кода в go есть
специальная программа, называется gofmt.

62
00:04:03,490 --> 00:04:10,566
gofmt -w — это флаг,
что нужно перезаписать прям на этот файл,

63
00:04:10,566 --> 00:04:14,612
если там что-то есть,
и файл, который нужно.

64
00:04:14,612 --> 00:04:18,629
Хорошо, он мне отформатировал
мою программу,

65
00:04:18,629 --> 00:04:21,190
теперь она опять выглядит красиво.

66
00:04:21,190 --> 00:04:25,112
В go считается очень плохим
тоном не использовать gofmt,

67
00:04:25,112 --> 00:04:28,320
поэтому приучайтесь
использовать его сразу.

68
00:04:28,320 --> 00:04:33,609
Что очень хорошо — этот инструмент встроен

69
00:04:33,609 --> 00:04:38,570
практически во все основные редакторы
кода, поэтому на visual studio с плагином

70
00:04:38,570 --> 00:04:43,460
для go он будет запускаться
автоматически на каждое ваше сохранение.

71
00:04:43,460 --> 00:04:48,940
Итак, мы написали нашу первую программу.

72
00:04:48,940 --> 00:04:51,444
Запустили ее.

73
00:04:51,444 --> 00:04:58,190
Ну, а теперь пора знакомиться с основными
типами данных и начнем мы с переменных.