1
00:00:00,000 --> 00:00:05,720
[БЕЗ СЛОВ] В

2
00:00:05,720 --> 00:00:11,886
этом видео я расскажу про обслуживание
статических файлов на Go,

3
00:00:11,886 --> 00:00:17,550
например, картинок либо CSS-файлов,
либо JS-файлов.

4
00:00:17,550 --> 00:00:22,863
Зачастую ваш веб-сервер на Go будет

5
00:00:22,863 --> 00:00:28,770
находиться за инджинксом — это очень
частый сценарий, и обслуживанием статики

6
00:00:28,770 --> 00:00:33,272
будет заниматься либо вообще nginx, либо
она будет подгружаться откуда-то на CDN.

7
00:00:33,272 --> 00:00:39,300
Но иногда возникают случаи, когда вы
хотите что-то поразрабатывать локально,

8
00:00:39,300 --> 00:00:43,366
и очень не хочется поднимать
еще какой-то лишний

9
00:00:43,366 --> 00:00:46,570
сервер для обслуживания этих данных.

10
00:00:46,570 --> 00:00:50,625
В этом видео я покажу,
как это можно сделать при помощи Go.

11
00:00:50,625 --> 00:00:58,420
Итак, у меня есть картинка
Gopher — это зверек языка Go,

12
00:00:58,420 --> 00:01:06,373
и я хочу просто вывести его на
экран: написать Hello World!

13
00:01:06,373 --> 00:01:08,608
и дать на него ссылку.

14
00:01:08,608 --> 00:01:11,247
Вот тут я задаю, собственно, handler,

15
00:01:11,247 --> 00:01:14,175
который у меня будет
обрабатываться почти всегда.

16
00:01:14,175 --> 00:01:19,030
Дальше я хочу создать
обработчик статических файлов.

17
00:01:19,030 --> 00:01:25,040
Они будут лежать у меня в папке static,
которая находится рядом с моей программой.

18
00:01:25,040 --> 00:01:27,174
Я создаю FileServer.

19
00:01:27,174 --> 00:01:34,060
Теперь для того чтобы туда добраться,
я буду использовать префикс data.

20
00:01:34,060 --> 00:01:39,820
Поскольку я буду обращаться
к img/gopher.png,

21
00:01:39,820 --> 00:01:44,231
то data там уже не нужна,
и я буду ее просто обрезать.

22
00:01:44,231 --> 00:01:50,302
И я говорю, что теперь по префиксу
data нужно использовать staticHandler.

23
00:01:50,302 --> 00:01:51,860
Собственно, все.

24
00:01:51,860 --> 00:01:55,880
Теперь нужно запустить: go run static.go.

25
00:01:55,880 --> 00:02:00,490
Так, запустим — появилось!

26
00:02:00,490 --> 00:02:05,654
Эта картинка полностью была отдана гошным

27
00:02:05,654 --> 00:02:11,060
веб-серверам, и никакой другой
софт для этого не использовался.

28
00:02:11,060 --> 00:02:16,010
Поэтому если вы будете что-то
разрабатывать локально,

29
00:02:16,010 --> 00:02:20,390
Go полностью самодостаточен.