1
00:00:00,000 --> 00:00:06,027
[БЕЗ СЛОВ] В

2
00:00:06,027 --> 00:00:10,019
прошлом видео мы познакомились с
базовыми операциями-шаблонами,

3
00:00:10,019 --> 00:00:11,920
как вообще экспаундить шаблон.

4
00:00:11,920 --> 00:00:16,851
Это хорошо, что мы можем передать
туда любые структурированные данные,

5
00:00:16,851 --> 00:00:18,110
целые структуры.

6
00:00:18,110 --> 00:00:20,925
Можем ли мы вызывать
методы у этих структур?

7
00:00:20,925 --> 00:00:22,560
Это было бы очень удобно.

8
00:00:22,560 --> 00:00:23,430
Да, можем.

9
00:00:23,430 --> 00:00:27,314
Стандартный шаблонизатор Go
позволяет такие операции.

10
00:00:27,314 --> 00:00:29,780
Давайте рассмотрим следующий код.

11
00:00:29,780 --> 00:00:32,755
Создадим шаблон из файла method.html,

12
00:00:32,755 --> 00:00:35,990
добавим туда юзеров и
выполним этот шаблон.

13
00:00:35,990 --> 00:00:40,027
Чем это отличается от того кода,
что мы видели?

14
00:00:40,027 --> 00:00:45,603
Отличается это тем, что у пользователя
есть метод PrintActive().

15
00:00:45,603 --> 00:00:50,494
Она принимает на вход пользователя,
то есть метод пользователя,

16
00:00:50,494 --> 00:00:52,100
и возвращает строку.

17
00:00:52,100 --> 00:00:56,109
Если пользователь неактивен, мы возвращаем
пустую строку, иначе мы говорим,

18
00:00:56,109 --> 00:00:58,210
что пользователь с таким именем активен.

19
00:00:58,210 --> 00:01:02,550
Как теперь вызвать этот метод?

20
00:01:02,550 --> 00:01:04,022
Рассмотрим шаблон.

21
00:01:04,022 --> 00:01:08,767
Итерируемся по пользователям, говорим его

22
00:01:08,767 --> 00:01:13,213
имя и указываем метод,
который нужно вызвать.

23
00:01:13,213 --> 00:01:14,950
В данном случае это PrintActive().

24
00:01:14,950 --> 00:01:18,120
Теперь давайте запустим и посмотрим,
что получается.

25
00:01:18,120 --> 00:01:24,748
[БЕЗ СЛОВ] Итак,

26
00:01:24,748 --> 00:01:27,590
отлично.

27
00:01:27,590 --> 00:01:32,470
Vasily и его метод говорит,
что этот пользователь активен,

28
00:01:32,470 --> 00:01:35,249
и Dmitry тоже, что пользователь активен.

29
00:01:35,249 --> 00:01:37,510
У Ivan'а никакой активности нет.

30
00:01:37,510 --> 00:01:41,790
Это хорошо.

31
00:01:41,790 --> 00:01:44,773
Вызывать функции у структур
— это хорошо и полезно,

32
00:01:44,773 --> 00:01:49,169
но иногда хочется иметь какие-то
общие методы, которые просто,

33
00:01:49,169 --> 00:01:54,071
например, будут иметь возможность
работать с любыми данными, например,

34
00:01:54,071 --> 00:01:57,313
с int'ами, или ещё с чем-нибудь.

35
00:01:57,313 --> 00:02:02,970
В данном случае мы прокидываем в
структуру обособленные функции,

36
00:02:02,970 --> 00:02:05,330
которые уже не являются
методами структуры.

37
00:02:05,330 --> 00:02:09,076
Вот, например, функция IsUserOdd().

38
00:02:09,076 --> 00:02:16,790
Она говорит, является ли идентификатор
этого пользователя нечётным числом.

39
00:02:16,790 --> 00:02:21,670
Это не метод структуры,
он просто принимает эту структуру на вход.

40
00:02:21,670 --> 00:02:24,422
Ну и возвращает какое-то булевое значение.

41
00:02:24,422 --> 00:02:29,160
Теперь мы создаём карту функции,
которую мы хотим прокинуть в шаблонизатор.

42
00:02:29,160 --> 00:02:33,985
И при создании шаблонизатора
мы вот здесь указываем,

43
00:02:33,985 --> 00:02:36,845
что, пожалуйста,
используй вот эти вот функции.

44
00:02:36,845 --> 00:02:38,990
Переобъявлять функции потом нельзя.

45
00:02:38,990 --> 00:02:45,364
Ну и парсим сам шаблон пользователя
и выполнение уже шаблона.

46
00:02:45,364 --> 00:02:47,950
Теперь, как выглядит сам шаблон?

47
00:02:47,950 --> 00:02:52,070
Сам шаблон выглядит вот так: мы
итерируемся по пользователю,

48
00:02:52,070 --> 00:02:56,061
выводим его имя,
и теперь мы вызываем функцию.

49
00:02:56,061 --> 00:02:57,526
То есть if OddUser.

50
00:02:57,526 --> 00:03:01,640
OddUser — это как раз та функция,
которую мы прокинули в шаблон.

51
00:03:01,640 --> 00:03:02,180
Точка.

52
00:03:02,180 --> 00:03:06,970
Точка — это текущий элемент итерации,
то есть текущий объект User'а.

53
00:03:06,970 --> 00:03:11,726
И если условие истинно,
то мы вводим какой-то текст.

54
00:03:11,726 --> 00:03:12,340
Итак.

55
00:03:12,340 --> 00:03:20,453
[БЕЗ СЛОВ] Запустили сервер.

56
00:03:20,453 --> 00:03:21,426
Выводим.

57
00:03:21,426 --> 00:03:23,047
Итак, отлично.

58
00:03:23,047 --> 00:03:24,890
Vasily, id is odd.

59
00:03:24,890 --> 00:03:29,380
Ivan — ничего не написано,
потому что у него id 2.

60
00:03:29,380 --> 00:03:30,932
Это чётное число.

61
00:03:30,932 --> 00:03:35,205
И Dmitry,
у которого 3 — это тоже нечётное число.

62
00:03:35,205 --> 00:03:41,030
Таким образом, можно прокидывать
функции произвольные прямо в шаблон.