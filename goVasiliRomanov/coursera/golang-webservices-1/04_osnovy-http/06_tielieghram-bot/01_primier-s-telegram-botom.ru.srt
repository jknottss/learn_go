1
00:00:00,000 --> 00:00:07,812
[БЕЗ_ЗВУКА] В этом видео мы рассмотрим,

2
00:00:07,812 --> 00:00:14,690
каким образом можно создать Telegram бота,
используя язык Go.

3
00:00:14,690 --> 00:00:19,446
Мы не будем писать обработку совсем
всех-всех-всех событий с нуля,

4
00:00:19,446 --> 00:00:22,150
а воспользуемся готовой библиотекой.

5
00:00:22,150 --> 00:00:27,180
Есть готовая библиотека Telegram Bot API.

6
00:00:27,180 --> 00:00:29,689
Для начала нужно ее установить.

7
00:00:29,689 --> 00:00:34,031
Устанавливается она через команду go get,
либо, если вы будете

8
00:00:34,031 --> 00:00:37,680
пользоваться каким-то пакетным менеджером,
то используя его команды.

9
00:00:37,680 --> 00:00:43,350
Запускаем, отлично, всё скачалось,
установилось на gopath.

10
00:00:43,350 --> 00:00:48,389
Теперь нам нужно где-то
зарегистрировать нашего бота.

11
00:00:48,389 --> 00:00:48,902
Где?

12
00:00:48,902 --> 00:00:50,350
Это BotFather.

13
00:00:50,350 --> 00:00:55,678
BotFather в Telegram — это
специализированный бот,

14
00:00:55,678 --> 00:00:59,533
который выдает вам других ботов.

15
00:00:59,533 --> 00:01:05,180
Найти его можно в Telegram
по имени BotFather.

16
00:01:05,180 --> 00:01:07,890
Начнем с ним общаться.

17
00:01:07,890 --> 00:01:11,765
Он нам предлагает несколько разных опций.

18
00:01:11,765 --> 00:01:17,582
Выберем newbot, и он говорит,
каким образом называть?

19
00:01:17,582 --> 00:01:23,590
Назовем Coursera_golang_bot.

20
00:01:23,590 --> 00:01:29,911
Хорошо, это было имя нашего бота, которое
будет отображаться в списке контактов.

21
00:01:29,911 --> 00:01:34,530
Теперь непосредственно сам логин,
это будет то же самое.

22
00:01:34,530 --> 00:01:40,127
[БЕЗ_ЗВУКА] Хорошо.

23
00:01:40,127 --> 00:01:45,050
Мой бот создан,
мне был выдан токен, вот такой.

24
00:01:45,050 --> 00:01:49,215
Токен нужен для авторизации моего бота,

25
00:01:49,215 --> 00:01:57,017
чтобы никто левый не мог от
его имени ничего отправить.

26
00:01:57,017 --> 00:02:03,429
Я возьму токен,
скопирую его и вставлю в нужное место.

27
00:02:03,429 --> 00:02:07,790
Бот почти зарегистрирован.

28
00:02:07,790 --> 00:02:12,752
Теперь нам необходимо каким-то образом
выложить этого бота в Интернет либо

29
00:02:12,752 --> 00:02:17,570
еще как-то сделать,
чтобы Telegram мог до него достучаться.

30
00:02:17,570 --> 00:02:21,743
В этом примере мы
воспользуемся сервисом ngrok,

31
00:02:21,743 --> 00:02:27,537
который опрокидывает порт,

32
00:02:27,537 --> 00:02:30,950
по имени которого он выдает.

33
00:02:30,950 --> 00:02:34,832
Этот сервис, конечно,
не стоит использовать в продакшене,

34
00:02:34,832 --> 00:02:39,598
и вообще я бы не стал ему доверять
никакие свои данные и держать постоянно

35
00:02:39,598 --> 00:02:44,590
запущенным, однако для целей
разработки он, пожалуй, подойдет.

36
00:02:44,590 --> 00:02:49,165
Но если вы совсем ему не доверяете,
можно воспользоваться каким-то сервисом

37
00:02:49,165 --> 00:02:53,740
вроде Heroku, там есть бесплатный тарифный
план, который позволяет разместить бота.

38
00:02:53,740 --> 00:02:59,480
Итак, запустим ngrok, запустим ngrok.exe,

39
00:02:59,480 --> 00:03:04,100
88, вот он подключился.

40
00:03:04,100 --> 00:03:07,916
В тарифном плане не очень много
количества запросов в минуту,

41
00:03:07,916 --> 00:03:09,500
но нам даже этого хватит.

42
00:03:09,500 --> 00:03:14,211
Итак, он выдал нам https-адрес,
при обращении к которому

43
00:03:14,211 --> 00:03:19,413
будет перенаправлен на мой локальный порт.

44
00:03:19,413 --> 00:03:26,365
Итак, я его скопирую [БЕЗ_ЗВУКА]

45
00:03:26,365 --> 00:03:30,590
и вставлю себе в Webhook.

46
00:03:30,590 --> 00:03:34,816
Теперь у меня всё готово для того,

47
00:03:34,816 --> 00:03:38,771
чтобы начинать работать с ботом.

48
00:03:38,771 --> 00:03:42,240
Что наш бот будет уметь делать?

49
00:03:42,240 --> 00:03:47,300
Наш бот просто будет выкидывать
нам rss с Habrahabr.

50
00:03:47,300 --> 00:03:51,280
Итак, у нас есть какой-то список rss,

51
00:03:51,280 --> 00:03:55,902
но сначала мы посмотрим
непосредственно на создание бота.

52
00:03:55,902 --> 00:04:00,561
Итак, прежде всего мы создаем объект бота,
указываем ему токен,

53
00:04:00,561 --> 00:04:07,890
который мы создали в BotFather,
он инициализируется,

54
00:04:07,890 --> 00:04:13,410
отправит команды в Telegram, говоря,
что я вот такой-то, а вот мой токен.

55
00:04:13,410 --> 00:04:16,626
Потом мы говорим,
что мы authorized таким-то аккаунтом,

56
00:04:16,626 --> 00:04:18,650
и теперь мы начинаем слушать сервер.

57
00:04:18,650 --> 00:04:24,844
НашWebhookURL — это тот URL,
который как раз нам выдал ngrok.

58
00:04:24,844 --> 00:04:31,477
Мы начинаем его слушать,
устанавливаем Webhook.

59
00:04:31,477 --> 00:04:33,326
Что это значит?

60
00:04:33,326 --> 00:04:38,574
Это значит, что мы просто
ставим https-handle там внутри,

61
00:04:38,574 --> 00:04:43,193
которые будут обрабатывать
нам по этому URL все команды,

62
00:04:43,193 --> 00:04:46,622
которые приходят как
сообщение от Telegram.

63
00:04:46,622 --> 00:04:48,354
Там обычный json, он его парсит,

64
00:04:48,354 --> 00:04:50,820
распаковывает и возвращает
мне уже структуру.

65
00:04:50,820 --> 00:04:55,427
Я создаю канал updates, который говорит,
что вот на таком-то, пожалуйста,

66
00:04:55,427 --> 00:04:58,747
URL всё обрабатывай и возвращай мне.

67
00:04:58,747 --> 00:05:02,318
В отдельной горутине стартую веб-сервер,

68
00:05:02,318 --> 00:05:06,080
который непосредственно будет
обрабатывать https-запросы.

69
00:05:06,080 --> 00:05:10,120
Updates — это канал,
в который приходят сообщения.

70
00:05:10,120 --> 00:05:15,595
Теперь я просто в range использую цикл,

71
00:05:15,595 --> 00:05:18,880
буду висеть и слушать,
когда там что-то приходит.

72
00:05:18,880 --> 00:05:25,708
Если нам пришло сообщение и
у нас есть такой rss url,

73
00:05:25,708 --> 00:05:29,910
в данном случае только Habr,
мы получим его новости.

74
00:05:29,910 --> 00:05:34,840
Если всё плохо, то мы скажем,
что извините, ошибка.

75
00:05:34,840 --> 00:05:38,666
Если всё хорошо,
мы увидим эти новости в виде сообщения.

76
00:05:38,666 --> 00:05:42,561
Вывод используется при
помощи команды bot.Send.

77
00:05:42,561 --> 00:05:49,354
Я использую сразу простое сокращение
для объекта нового сообщения,

78
00:05:49,354 --> 00:05:54,170
где указываю мой идентификатор,
кому отправить,

79
00:05:54,170 --> 00:06:00,420
и просто URL и заголовок этой новости.

80
00:06:00,420 --> 00:06:06,670
Если же такого rss feed у меня нет,
я скажу об этом, что только Habr доступен.

81
00:06:06,670 --> 00:06:10,431
Всё.
Каким образом я буду получать новости?

82
00:06:10,431 --> 00:06:16,238
Новости я получаю из URL,
я просто иду get запросом

83
00:06:16,238 --> 00:06:21,300
на этот URL, вычитываю и распаковываю xml,

84
00:06:21,300 --> 00:06:25,834
что тоже очень просто, очень быстро
используется, всего лишь две структуры.

85
00:06:25,834 --> 00:06:30,165
Конечно, я распаковываю не всё,
только совсем самый-самый минимум,

86
00:06:30,165 --> 00:06:31,447
который мне нужен.

87
00:06:31,447 --> 00:06:35,910
Давайте теперь это наконец запустим
и посмотрим, как оно работает.

88
00:06:35,910 --> 00:06:40,670
Итак, go run bot.

89
00:06:40,670 --> 00:06:46,390
Хорошо, я авторизовался вот этим ботом,

90
00:06:46,390 --> 00:06:51,770
на порту 88 я слушаю,
теперь мне нужно его найти в Telegram.

91
00:06:51,770 --> 00:06:59,604
Поищем, вот

92
00:06:59,604 --> 00:07:02,400
нашелся мой бот,

93
00:07:02,400 --> 00:07:07,287
теперь я могу написать, ещё ничего нет,

94
00:07:07,287 --> 00:07:11,450
я должен первым инициализировать
общение с ним, нажав кнопку старт.

95
00:07:11,450 --> 00:07:16,090
Он мне говорит,
что только Habr доступен, мы видим Habr,

96
00:07:16,090 --> 00:07:20,958
и мне

97
00:07:20,958 --> 00:07:25,134
вывелись последние новости уже с Habr.

98
00:07:25,134 --> 00:07:32,594
Я выводил только URL и preview,
а уже большой блок с красивым preview,

99
00:07:32,594 --> 00:07:38,861
с красивым форматированием и картинками
— это заслуга самого Telegram.

100
00:07:38,861 --> 00:07:44,890
Я мог бы ограничиться только ссылками.

101
00:07:44,890 --> 00:07:50,932
Такими простыми действиями
буквально меньше 100 строк

102
00:07:50,932 --> 00:07:57,410
можно создать Telegram бота, который будет
отвечать на ваши команды и что-то делать.

103
00:07:57,410 --> 00:08:01,335
Конечно, вы можете отсылать
сообщения и офлайн, например,

104
00:08:01,335 --> 00:08:04,400
для каких-то уведомлений или
мониторинга других серверов.

105
00:08:04,400 --> 00:08:10,480
Это довольно большой API,
там есть много разных типов сообщений.

106
00:08:10,480 --> 00:08:15,369
Вы можете послать картинку, документ,

107
00:08:15,369 --> 00:08:22,320
и в целом на Go писать такого рода
сервисы довольно просто и быстро.