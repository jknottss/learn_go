[БЕЗ_ЗВУКА] Если уж вы дошли до оптимизации роутеров
и вам важна его производительность, то весьма вероятно, что следующим шагом вас не устроит производительность
стандартного http-сервера, который поставляется из коробки,
и вы захотите что-то пооптимальнее. Например, запросов у
вас просто очень много. И даже то количество памяти, которое ест стандартный http-сервер,
вас будет не устраивать. И вы захотите искать что-то еще. В этом видео мы поговорим
как раз про «что-то еще». Есть веб-сервер,
который называется fasthttp. Это альтернативная
реализация http-сервера. Она гораздо быстрее. Обратите внимание,
гораздо меньше памяти тратится на запрос и гораздо меньше памяти
аллоцируется на каждый запрос. За счет чего это происходит? Происходит это за счет
активного переиспользования всех структур веб-сервера: данных ответа, контекста и прочего. Поскольку это отдельный
абсолютно веб-сервер, он не предоставляет своего мультиплексора, однако уже есть под него порты других. Например, fasthttprouter — это
порт под fasthttp — роутера, который мы рассматривали в
предыдущем видео, httprouter. То есть хотя бы мы можем базовые
вещи делать, которые нам нужны. Также у него полностью
отличается сигнатура функций, полностью отличается
работа с данными запроса. Например, у него нет
привычного нам реквеста, у него есть контекст — и там есть все. Соответственно, установка всего-всего
происходит через контекст. То есть оно накапливается в памяти, накапливается в буфере,
если вы хотите тело ответа. И вы можете даже, например, хедера заменить уже после того,
как вы вроде бы установили body. И body вы тоже можете заменить
и вывести что-то еще другое. В итоге останется вот это. Также, что стоит отметить про fasthttp, что часто мы после завершения работы
обрабатываем что-то в отдельной горутине. В случае с myfunc(ctx), в случае с fasthttp-сервером вот так
делать нельзя, потому что контекст после завершения функции возвращается в пул и
будет переиспользован другим запросом. Поэтому эта операция уже будет крайне
небезопасна и подвержена рейсам. То есть про это стоит упомянуть сразу, чтобы вы не наступали на эти грабли. Но, в целом, это очень быстрый
сервер и много кто его использует. Под него есть свои фреймворки. В общем, он полноценен. Однако вам стоит дважды подумать,
прежде чем использовать его. Если вы действительно не упираетесь
в производительность стандартного http-сервера, то, скорее всего, не стоит рваться вкручивать
все самое-самое быстрое. Лучше заняться бизнес-логикой
вашей программы.