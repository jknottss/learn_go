1
00:00:00,000 --> 00:00:04,362
[БЕЗ_ЗВУКА] В этом видео

2
00:00:04,362 --> 00:00:09,225
мы поговорим про тему,
которая не относится

3
00:00:09,225 --> 00:00:13,873
непосредственно к нашему курсу, но про
которую нужно говорить всегда и почаще.

4
00:00:13,873 --> 00:00:15,728
Называется это sql-инъекция.

5
00:00:15,728 --> 00:00:17,790
Давайте рассмотрим следующий код.

6
00:00:17,790 --> 00:00:21,560
Вот у нас есть какая-то форма,

7
00:00:21,560 --> 00:00:25,650
давайте сначала посмотрим на форму,

8
00:00:25,650 --> 00:00:29,700
где у нас есть логин и пароль.

9
00:00:29,700 --> 00:00:35,080
Мы вводим один пароль, авторизуемся,
и все вроде бы хорошо.

10
00:00:35,080 --> 00:00:37,563
Но в чем подвох?

11
00:00:37,563 --> 00:00:42,267
Мы добавляем параметр руками,
мы подставляем

12
00:00:42,267 --> 00:00:47,286
этот параметр руками в запрос,
фактически без экранирования.

13
00:00:47,286 --> 00:00:51,800
Мы думаем, если там встретится кавычка,
то я поставлю кавычку,

14
00:00:51,800 --> 00:00:56,010
и все будет хорошо, на случай,
если в параметре несколько пробелов.

15
00:00:56,010 --> 00:01:00,990
Но давайте посмотрим, к чему это приводит.

16
00:01:00,990 --> 00:01:06,560
Вот наша форма, я ввел user,
который реально существует, нажал login.

17
00:01:06,560 --> 00:01:11,410
Итак, вот мой запрос,
который получился у меня.

18
00:01:11,410 --> 00:01:14,515
Я достаю id,
login из таблицы пользователей.

19
00:01:14,515 --> 00:01:18,522
Все хорошо, user подставился,
кавычки есть, все нормально.

20
00:01:18,522 --> 00:01:21,980
Запись нашлась: да,
действительно, id 1, login user.

21
00:01:21,980 --> 00:01:26,380
Но давайте посмотрим
вариант с sql-инъекцией.

22
00:01:26,380 --> 00:01:31,060
Итак, я выдал какую-нибудь страшную штуку.

23
00:01:31,060 --> 00:01:33,486
404 or login = admin.

24
00:01:33,486 --> 00:01:35,582
И нажму кнопку login.

25
00:01:35,582 --> 00:01:40,415
И теперь вроде бы у меня не
должно быть такого пользователя,

26
00:01:40,415 --> 00:01:42,700
я вроде бы там кавычки какие-то вводил.

27
00:01:42,700 --> 00:01:44,470
Но что на самом деле произошло?

28
00:01:44,470 --> 00:01:49,055
Вот параметр, который я ввел.

29
00:01:49,055 --> 00:01:53,562
Обратите внимание, тут нет
открывающейся кавычки и закрывающейся.

30
00:01:53,562 --> 00:02:00,110
И вот эта кавычка закрыла то,
что я писал, а дальше уже мой запрос.

31
00:02:00,110 --> 00:02:05,062
И поэтому вариант, когда я руками
подставляю параметру запрос,

32
00:02:05,062 --> 00:02:09,050
он нашел у меня пользователя admin,
в то время как вариант с плейсходлерами,

33
00:02:09,050 --> 00:02:13,380
он корректно экранировал значение,
и там ничего не нашлось.

34
00:02:13,380 --> 00:02:15,576
Давайте взглянем на код еще раз.

35
00:02:15,576 --> 00:02:17,700
Вот вариант с sql-инъекцией.

36
00:02:17,700 --> 00:02:22,661
Мы подставляем значение руками
в sql-запрос через Sprintf.

37
00:02:22,661 --> 00:02:27,503
В принципе, это было бы аналогично,
как если бы мы написали вот так,

38
00:02:27,503 --> 00:02:30,581
и тут был бы не тот логин.

39
00:02:30,581 --> 00:02:31,760
Вот так.

40
00:02:31,760 --> 00:02:35,666
То же самое.

41
00:02:35,666 --> 00:02:37,731
Но так делать нельзя.

42
00:02:37,731 --> 00:02:39,083
Просто запомните.

43
00:02:39,083 --> 00:02:43,425
Никогда не надо подставлять
значения в sql-запрос

44
00:02:43,425 --> 00:02:47,670
руками без экранирования корректного.

45
00:02:47,670 --> 00:02:49,366
Поэтому появляется вопрос,

46
00:02:49,366 --> 00:02:53,240
каким образом произвести корректное
экранирование параметров.

47
00:02:53,240 --> 00:03:00,740
В случае с sql в базах данных почти
везде поддерживаются плейсхолдеры.

48
00:03:00,740 --> 00:03:06,370
В MySQL это символ вопроса,

49
00:03:06,370 --> 00:03:09,515
и весь запрос сразу у
вас уходит в QueryRow.

50
00:03:09,515 --> 00:03:14,696
Я не делаю предварительный запрос,
если он мне нужен, а сам параметр,

51
00:03:14,696 --> 00:03:20,470
который я хочу подставить вместо знака
вопроса, он передается уже в QueryRow.

52
00:03:20,470 --> 00:03:25,345
QueryRow — это variadic функция, то есть
она принимает переменное число аргументов,

53
00:03:25,345 --> 00:03:27,430
в данном случае они названы как args.

54
00:03:27,430 --> 00:03:30,267
И там принимается пустой интерфейс,

55
00:03:30,267 --> 00:03:33,910
то есть вы можете передать
туда любое значение.

56
00:03:33,910 --> 00:03:38,601
Поэтому просто запомните: если вы хотите
подставить какое-то значение в sql,

57
00:03:38,601 --> 00:03:42,520
всегда используйте плейсхолдеры.

58
00:03:42,520 --> 00:03:46,346
Это обезопасит вас от очень многих
проблем, вызванных sql-инъекциями,

59
00:03:46,346 --> 00:03:52,150
потому что это самая распространенная
уязвимость в современных веб-приложениях.